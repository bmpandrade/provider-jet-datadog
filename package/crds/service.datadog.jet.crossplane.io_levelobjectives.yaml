---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: levelobjectives.service.datadog.jet.crossplane.io
spec:
  group: service.datadog.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - datadogjet
    kind: LevelObjective
    listKind: LevelObjectiveList
    plural: levelobjectives
    singular: levelobjective
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LevelObjective is the Schema for the LevelObjectives API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LevelObjectiveSpec defines the desired state of LevelObjective
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A description of this service level objective.
                    type: string
                  forceDelete:
                    description: A boolean indicating whether this monitor can be
                      deleted even if itâ€™s referenced by other resources (e.g. dashboards).
                    type: boolean
                  groups:
                    description: A static set of groups to filter monitor-based SLOs
                    items:
                      type: string
                    type: array
                  monitorIds:
                    description: A static set of monitor IDs to use as part of the
                      SLO
                    items:
                      type: number
                    type: array
                  query:
                    description: The metric query of good / total events
                    items:
                      properties:
                        denominator:
                          description: The sum of the `total` events.
                          type: string
                        numerator:
                          description: The sum of all the `good` events.
                          type: string
                      required:
                      - denominator
                      - numerator
                      type: object
                    type: array
                  tags:
                    description: 'A list of tags to associate with your service level
                      objective. This can help you categorize and filter service level
                      objectives in the service level objectives page of the UI. Note:
                      it''s not currently possible to filter by these tags when querying
                      via the API'
                    items:
                      type: string
                    type: array
                  thresholds:
                    description: A list of thresholds and targets that define the
                      service level objectives from the provided SLIs.
                    items:
                      properties:
                        target:
                          description: The objective's target in`[0,100]`.
                          type: number
                        timeframe:
                          description: The time frame for the objective. The mapping
                            from these types to the types found in the Datadog Web
                            UI can be found in the Datadog API documentation page.
                            Valid values are `7d`, `30d`, `90d`, `custom`.
                          type: string
                        warning:
                          description: The objective's warning value in `[0,100]`.
                            This must be greater than the target value.
                          type: number
                      required:
                      - target
                      - timeframe
                      type: object
                    type: array
                  type:
                    description: The type of the service level objective. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object).
                      Valid values are `metric`, `monitor`.
                    type: string
                  validate:
                    description: Whether or not to validate the SLO.
                    type: boolean
                required:
                - thresholds
                - type
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LevelObjectiveStatus defines the observed state of LevelObjective.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
