/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomVariableObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CustomVariableParameters struct {

	// Whether the custom variable is secret or not.
	// +kubebuilder:validation:Required
	IsSecret *bool `json:"isSecret" tf:"is_secret,omitempty"`

	// The value of the custom variable.
	// +kubebuilder:validation:Required
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

// CustomVariableSpec defines the desired state of CustomVariable
type CustomVariableSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomVariableParameters `json:"forProvider"`
}

// CustomVariableStatus defines the observed state of CustomVariable.
type CustomVariableStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomVariableObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CustomVariable is the Schema for the CustomVariables API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,datadogjet}
type CustomVariable struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CustomVariableSpec   `json:"spec"`
	Status            CustomVariableStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomVariableList contains a list of CustomVariables
type CustomVariableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomVariable `json:"items"`
}

// Repository type metadata.
var (
	CustomVariable_Kind             = "CustomVariable"
	CustomVariable_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomVariable_Kind}.String()
	CustomVariable_KindAPIVersion   = CustomVariable_Kind + "." + CRDGroupVersion.String()
	CustomVariable_GroupVersionKind = CRDGroupVersion.WithKind(CustomVariable_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomVariable{}, &CustomVariableList{})
}
